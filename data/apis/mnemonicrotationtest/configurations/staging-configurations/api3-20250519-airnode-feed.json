{
  "nodeSettings": {
    "airnodeWalletMnemonic": "${WALLET_MNEMONIC}",
    "nodeVersion": "3.3.0",
    "stage": "${STAGE}"
  },
  "templates": {
    "0x390415de6e54b5c68fb58e8bec19b2bf2f093258753ef0d47f8315cf7ea6d86b": {
      "endpointId": "0x75a68762c1178eb3eca09f4c1e1fb729880b4b1c3a8a78a43f615eee7c3c303a",
      "parameters": [
        {
          "type": "string32",
          "name": "name",
          "value": "AAVE/USD"
        }
      ]
    },
    "0x3ed89f50c14808d67871d60e8fc351bccc47381dfe8903e1532468301ae9dead": {
      "endpointId": "0x75a68762c1178eb3eca09f4c1e1fb729880b4b1c3a8a78a43f615eee7c3c303a",
      "parameters": [
        {
          "type": "string32",
          "name": "name",
          "value": "AERO/USD"
        }
      ]
    },
    "0xf01cf8dbd251ddf3e0108764f465a49e0eb51dc726ab1938a41568ad078bdbc2": {
      "endpointId": "0x75a68762c1178eb3eca09f4c1e1fb729880b4b1c3a8a78a43f615eee7c3c303a",
      "parameters": [
        {
          "type": "string32",
          "name": "name",
          "value": "ADA/USD"
        }
      ]
    }
  },
  "endpoints": {
    "0x75a68762c1178eb3eca09f4c1e1fb729880b4b1c3a8a78a43f615eee7c3c303a": {
      "endpointName": "feed",
      "oisTitle": "MnemonicRotationTest"
    }
  },
  "triggers": {
    "signedApiUpdates": [
      {
        "templateIds": ["0x390415de6e54b5c68fb58e8bec19b2bf2f093258753ef0d47f8315cf7ea6d86b"],
        "fetchInterval": 5
      },
      {
        "templateIds": ["0x3ed89f50c14808d67871d60e8fc351bccc47381dfe8903e1532468301ae9dead"],
        "fetchInterval": 5
      },
      {
        "templateIds": ["0xf01cf8dbd251ddf3e0108764f465a49e0eb51dc726ab1938a41568ad078bdbc2"],
        "fetchInterval": 5
      }
    ]
  },
  "signedApis": [
    {
      "name": "Staging",
      "url": "https://signed-api.stage.nodary.io",
      "authToken": "${AUTH_TOKEN_STAGING}"
    }
  ],
  "ois": [
    {
      "oisFormat": "2.3.0",
      "title": "MnemonicRotationTest",
      "version": "1.0.0",
      "apiSpecifications": {
        "components": {
          "securitySchemes": {}
        },
        "paths": {
          "/{path}": {
            "get": {
              "parameters": [
                {
                  "in": "path",
                  "name": "path"
                }
              ]
            }
          }
        },
        "servers": [
          {
            "url": "https://realtime.blocksize.info"
          }
        ],
        "security": {}
      },
      "endpoints": [
        {
          "fixedOperationParameters": [],
          "name": "feed",
          "operation": {
            "method": "get",
            "path": "/{path}"
          },
          "parameters": [
            {
              "name": "name",
              "required": true
            },
            {
              "name": "path",
              "operationParameter": {
                "in": "path",
                "name": "path"
              },
              "required": true
            }
          ],
          "reservedParameters": [
            {
              "name": "_type",
              "fixed": "int256"
            },
            {
              "name": "_times",
              "fixed": "1000000000000000000"
            }
          ],
          "preProcessingSpecificationV2": {
            "environment": "Node",
            "value": "({ endpointParameters }) => {\n  const preProcessingObject = {\n    \"AAVE/USD\": { path: \"getVWAP/AAVEUSD\", parameters: {} },\n    \"AERO/USD\": { path: \"getVWAP/AEROUSD\", parameters: {} },\n    \"ADA/USD\": { path: \"getVWAP/ADAUSD\", parameters: {} },\n  }\n  return {\n    endpointParameters: {\n      path: preProcessingObject[endpointParameters.name].path,\n      ...preProcessingObject[endpointParameters.name].parameters,\n    },\n  }\n}\n",
            "timeoutMs": 5000
          },
          "postProcessingSpecificationV2": {
            "environment": "Node",
            "value": "({ response, endpointParameters }) => {\n  const postProcessingObject = {\n    \"AAVE/USD\": \"(response) => { return response.price; }\",\n    \"AERO/USD\": \"(response) => { return response.price; }\",\n    \"ADA/USD\": \"(response) => { return response.price; }\",\n  }\n  const parser = eval(postProcessingObject[endpointParameters.name])\n  return { response: parser(response) }\n}\n",
            "timeoutMs": 5000
          }
        }
      ]
    }
  ],
  "apiCredentials": []
}
