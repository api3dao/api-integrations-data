{
  "nodeSettings": {
    "airnodeWalletMnemonic": "${WALLET_MNEMONIC}",
    "nodeVersion": "1.0.0",
    "stage": "${STAGE}"
  },
  "templates": {
    "0x129685ec1b90d7ef097c9d7eef4eabecae457986005fca79c4eadc46318cb7a4": {
      "endpointId": "0x93c74658d1b03f2d31e0f2de447489c34e276199c23ceaf527b7b84812cf2d6c",
      "parameters": [
        {
          "type": "string32",
          "name": "name",
          "value": "SOMETHING Exchange Rate"
        }
      ]
    },
    "0xfbaaf00fcb42f482a7685faa6d2d1d89ca9e3c0ce1451ba08cc27d5ad0fc91de": {
      "endpointId": "0x93c74658d1b03f2d31e0f2de447489c34e276199c23ceaf527b7b84812cf2d6c",
      "parameters": [
        {
          "type": "string32",
          "name": "name",
          "value": "SOMETHINGELSE Exchange Rate"
        }
      ]
    }
  },
  "endpoints": {
    "0x93c74658d1b03f2d31e0f2de447489c34e276199c23ceaf527b7b84812cf2d6c": {
      "endpointName": "feed",
      "oisTitle": "Ankr"
    }
  },
  "triggers": {
    "signedApiUpdates": [
      {
        "templateIds": ["0x129685ec1b90d7ef097c9d7eef4eabecae457986005fca79c4eadc46318cb7a4"],
        "fetchInterval": 60
      },
      {
        "templateIds": ["0xfbaaf00fcb42f482a7685faa6d2d1d89ca9e3c0ce1451ba08cc27d5ad0fc91de"],
        "fetchInterval": 60
      }
    ]
  },
  "signedApis": [
    {
      "name": "Nodary",
      "url": "https://signed-api.nodary.io",
      "authToken": "${AUTH_TOKEN_NODARY}"
    }
  ],
  "ois": [
    {
      "oisFormat": "2.3.0",
      "title": "Ankr",
      "version": "1.0.0",
      "apiSpecifications": {
        "components": {
          "securitySchemes": {
            "ETHEREUM_RPC_URL": {
              "in": "query",
              "name": "",
              "type": "apiKey"
            },
            "OPTIMISM_RPC_URL": {
              "in": "query",
              "name": "",
              "type": "apiKey"
            },
            "BINANCE_SMART_CHAIN_RPC_URL": {
              "in": "query",
              "name": "",
              "type": "apiKey"
            },
            "POLYGON_RPC_URL": {
              "in": "query",
              "name": "",
              "type": "apiKey"
            },
            "POLYGON_ZKEVM_RPC_URL": {
              "in": "query",
              "name": "",
              "type": "apiKey"
            },
            "MOONBEAM_RPC_URL": {
              "in": "query",
              "name": "",
              "type": "apiKey"
            },
            "MANTLE_RPC_URL": {
              "in": "query",
              "name": "",
              "type": "apiKey"
            },
            "BASE_RPC_URL": {
              "in": "query",
              "name": "",
              "type": "apiKey"
            },
            "ARBITRUM_RPC_URL": {
              "in": "query",
              "name": "",
              "type": "apiKey"
            },
            "AVALANCHE_RPC_URL": {
              "in": "query",
              "name": "",
              "type": "apiKey"
            },
            "LINEA_RPC_URL": {
              "in": "query",
              "name": "",
              "type": "apiKey"
            },
            "BLAST_RPC_URL": {
              "in": "query",
              "name": "",
              "type": "apiKey"
            }
          }
        },
        "paths": {
          "/{path}": {
            "get": {
              "parameters": [
                {
                  "in": "path",
                  "name": "path"
                },
                {
                  "in": "query",
                  "name": "dAPIName"
                },
                {
                  "in": "query",
                  "name": "multicallData"
                },
                {
                  "in": "query",
                  "name": "returnTypes"
                },
                {
                  "in": "query",
                  "name": "chainId"
                },
                {
                  "in": "query",
                  "name": "returnFormat"
                }
              ]
            }
          }
        },
        "servers": [
          {
            "url": "https://rpc.ankr.com"
          }
        ],
        "security": {
          "ETHEREUM_RPC_URL": [],
          "OPTIMISM_RPC_URL": [],
          "BINANCE_SMART_CHAIN_RPC_URL": [],
          "POLYGON_RPC_URL": [],
          "POLYGON_ZKEVM_RPC_URL": [],
          "MOONBEAM_RPC_URL": [],
          "MANTLE_RPC_URL": [],
          "BASE_RPC_URL": [],
          "ARBITRUM_RPC_URL": [],
          "AVALANCHE_RPC_URL": [],
          "LINEA_RPC_URL": [],
          "BLAST_RPC_URL": []
        }
      },
      "endpoints": [
        {
          "fixedOperationParameters": [],
          "name": "feed",
          "parameters": [
            {
              "name": "name",
              "required": true
            },
            {
              "name": "path",
              "operationParameter": {
                "in": "path",
                "name": "path"
              },
              "required": true
            },
            {
              "name": "dAPIName",
              "operationParameter": {
                "in": "query",
                "name": "dAPIName"
              },
              "required": true
            },
            {
              "name": "multicallData",
              "operationParameter": {
                "in": "query",
                "name": "multicallData"
              },
              "required": true
            },
            {
              "name": "returnTypes",
              "operationParameter": {
                "in": "query",
                "name": "returnTypes"
              },
              "required": true
            },
            {
              "name": "chainId",
              "operationParameter": {
                "in": "query",
                "name": "chainId"
              },
              "required": true
            },
            {
              "name": "returnFormat",
              "operationParameter": {
                "in": "query",
                "name": "returnFormat"
              },
              "required": true
            }
          ],
          "reservedParameters": [
            {
              "name": "_type",
              "fixed": "int256"
            },
            {
              "name": "_times",
              "fixed": "1"
            }
          ],
          "preProcessingSpecificationV2": {
            "environment": "Node",
            "value": "({ endpointParameters }) => {\n  const preProcessingObject = {\n    \"SOMETHING Exchange Rate\": {\n      path: \"/\",\n      parameters: {\n        dAPIName: \"SOMETHING Exchange Rate\",\n        multicallData:\n          \"0x252dba42000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000ae78736cd615f374d3085123a210448e74fc639300000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000004e6aa216c00000000000000000000000000000000000000000000000000000000\",\n        returnTypes: '[[\"uint256\"]]',\n        chainId: \"1\",\n        returnFormat: \"[0]\",\n      },\n    },\n    \"SOMETHINGELSE Exchange Rate\": {\n      path: \"/\",\n      parameters: {\n        dAPIName: \"SOMETHINGELSE Exchange Rate\",\n        multicallData:\n          \"0x252dba42000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000ae78736cd615f374d3085123a210448e74fc639300000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000004e6aa216c00000000000000000000000000000000000000000000000000000000\",\n        returnTypes: '[[\"uint256\"]]',\n        chainId: \"1\",\n        returnFormat: \"[0]\",\n      },\n    },\n  }\n  return {\n    endpointParameters: {\n      path: preProcessingObject[endpointParameters.name].path,\n      ...preProcessingObject[endpointParameters.name].parameters,\n    },\n  }\n}\n",
            "timeoutMs": 5000
          },
          "postProcessingSpecificationV2": {
            "environment": "Node",
            "value": "\n                async ({ response, endpointParameters }) => {\n                  const postProcessingObject = {\"SOMETHING Exchange Rate\":\"(response) => {\\n          return response['response']['calls'][0][0]\\n        }\\n        \",\"SOMETHINGELSE Exchange Rate\":\"(response) => {\\n          return response['response']['calls'][0][0]\\n        }\\n        \"};\n                  const input = { endpointParameters: response.data, ...{\"1\":\"${ETHEREUM_RPC_URL_VALUE}\",\"10\":\"${OPTIMISM_RPC_URL_VALUE}\",\"56\":\"${BINANCE_SMART_CHAIN_RPC_URL_VALUE}\",\"137\":\"${POLYGON_RPC_URL_VALUE}\",\"1101\":\"${POLYGON_ZKEVM_RPC_URL_VALUE}\",\"1284\":\"${MOONBEAM_RPC_URL_VALUE}\",\"5000\":\"${MANTLE_RPC_URL_VALUE}\",\"8453\":\"${BASE_RPC_URL_VALUE}\",\"42161\":\"${ARBITRUM_RPC_URL_VALUE}\",\"43114\":\"${AVALANCHE_RPC_URL_VALUE}\",\"59144\":\"${LINEA_RPC_URL_VALUE}\",\"81457\":\"${BLAST_RPC_URL_VALUE}\"} };\n                  const worker = new worker_threads.Worker(`console.log('This is shim code - worker has started.');  \\${new buffer.Buffer('', 'base64url').toString()}`, { eval: true });\n                  worker.postMessage(input);\n                  const callResponse = await new Promise((resolve, reject) => {\n                    worker.on('message', (message) => {\n                      console.log(\"shim code - worker has finished.\");\n                      worker.terminate();\n                      if (message.error) return reject(message.error);\n                      resolve(message);\n                    })\n                  });\n                  const parser = eval(postProcessingObject[endpointParameters.name]);\n                  return { response: parser(callResponse) };\n                }\n              ",
            "timeoutMs": 15000
          }
        }
      ]
    }
  ],
  "apiCredentials": [
    {
      "oisTitle": "Ankr",
      "securitySchemeName": "ETHEREUM_RPC_URL",
      "securitySchemeValue": "${ETHEREUM_RPC_URL_VALUE}"
    },
    {
      "oisTitle": "Ankr",
      "securitySchemeName": "OPTIMISM_RPC_URL",
      "securitySchemeValue": "${OPTIMISM_RPC_URL_VALUE}"
    },
    {
      "oisTitle": "Ankr",
      "securitySchemeName": "BINANCE_SMART_CHAIN_RPC_URL",
      "securitySchemeValue": "${BINANCE_SMART_CHAIN_RPC_URL_VALUE}"
    },
    {
      "oisTitle": "Ankr",
      "securitySchemeName": "POLYGON_RPC_URL",
      "securitySchemeValue": "${POLYGON_RPC_URL_VALUE}"
    },
    {
      "oisTitle": "Ankr",
      "securitySchemeName": "POLYGON_ZKEVM_RPC_URL",
      "securitySchemeValue": "${POLYGON_ZKEVM_RPC_URL_VALUE}"
    },
    {
      "oisTitle": "Ankr",
      "securitySchemeName": "MOONBEAM_RPC_URL",
      "securitySchemeValue": "${MOONBEAM_RPC_URL_VALUE}"
    },
    {
      "oisTitle": "Ankr",
      "securitySchemeName": "MANTLE_RPC_URL",
      "securitySchemeValue": "${MANTLE_RPC_URL_VALUE}"
    },
    {
      "oisTitle": "Ankr",
      "securitySchemeName": "BASE_RPC_URL",
      "securitySchemeValue": "${BASE_RPC_URL_VALUE}"
    },
    {
      "oisTitle": "Ankr",
      "securitySchemeName": "ARBITRUM_RPC_URL",
      "securitySchemeValue": "${ARBITRUM_RPC_URL_VALUE}"
    },
    {
      "oisTitle": "Ankr",
      "securitySchemeName": "AVALANCHE_RPC_URL",
      "securitySchemeValue": "${AVALANCHE_RPC_URL_VALUE}"
    },
    {
      "oisTitle": "Ankr",
      "securitySchemeName": "LINEA_RPC_URL",
      "securitySchemeValue": "${LINEA_RPC_URL_VALUE}"
    },
    {
      "oisTitle": "Ankr",
      "securitySchemeName": "BLAST_RPC_URL",
      "securitySchemeValue": "${BLAST_RPC_URL_VALUE}"
    }
  ]
}
