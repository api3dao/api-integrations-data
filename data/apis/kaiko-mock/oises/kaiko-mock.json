{
  "oisFormat": "2.3.0",
  "title": "Kaiko",
  "version": "0.1.0",
  "apiSpecifications": {
    "components": {
      "securitySchemes": {
        "KaikoSecurityScheme1ApiKey": {
          "in": "header",
          "name": "X-Api-Key",
          "type": "apiKey"
        }
      }
    },
    "paths": {
      "/{path}": {
        "get": {
          "parameters": [
            {
              "in": "path",
              "name": "path"
            },
            {
              "in": "query",
              "name": "outliers_min_data"
            },
            {
              "in": "query",
              "name": "start_time"
            },
            {
              "in": "query",
              "name": "sort"
            },
            {
              "in": "query",
              "name": "end_time"
            },
            {
              "in": "query",
              "name": "outliers_threshold"
            },
            {
              "in": "query",
              "name": "include_exchanges"
            },
            {
              "in": "query",
              "name": "page_size"
            },
            {
              "in": "query",
              "name": "sources"
            },
            {
              "in": "query",
              "name": "outliers_strategy"
            },
            {
              "in": "query",
              "name": "interval"
            },
            {
              "in": "query",
              "name": "extrapolate_missing_values"
            },
            {
              "in": "query",
              "name": "exclude_exchanges"
            }
          ]
        }
      }
    },
    "servers": [
      {
        "url": "https://us.market-api.kaiko.io/v2/data"
      }
    ],
    "security": {
      "KaikoSecurityScheme1ApiKey": []
    }
  },
  "endpoints": [
    {
      "fixedOperationParameters": [],
      "name": "feed",
      "operation": {
        "method": "get",
        "path": "/{path}"
      },
      "parameters": [
        {
          "name": "name",
          "required": true
        },
        {
          "name": "path",
          "operationParameter": {
            "in": "path",
            "name": "path"
          },
          "required": true
        },
        {
          "name": "outliers_min_data",
          "operationParameter": {
            "in": "query",
            "name": "outliers_min_data"
          },
          "required": false
        },
        {
          "name": "start_time",
          "operationParameter": {
            "in": "query",
            "name": "start_time"
          },
          "required": false
        },
        {
          "name": "sort",
          "operationParameter": {
            "in": "query",
            "name": "sort"
          },
          "required": false
        },
        {
          "name": "end_time",
          "operationParameter": {
            "in": "query",
            "name": "end_time"
          },
          "required": false
        },
        {
          "name": "outliers_threshold",
          "operationParameter": {
            "in": "query",
            "name": "outliers_threshold"
          },
          "required": false
        },
        {
          "name": "include_exchanges",
          "operationParameter": {
            "in": "query",
            "name": "include_exchanges"
          },
          "required": false
        },
        {
          "name": "page_size",
          "operationParameter": {
            "in": "query",
            "name": "page_size"
          },
          "required": false
        },
        {
          "name": "sources",
          "operationParameter": {
            "in": "query",
            "name": "sources"
          },
          "required": false
        },
        {
          "name": "outliers_strategy",
          "operationParameter": {
            "in": "query",
            "name": "outliers_strategy"
          },
          "required": false
        },
        {
          "name": "interval",
          "operationParameter": {
            "in": "query",
            "name": "interval"
          },
          "required": true
        },
        {
          "name": "extrapolate_missing_values",
          "operationParameter": {
            "in": "query",
            "name": "extrapolate_missing_values"
          },
          "required": false
        },
        {
          "name": "exclude_exchanges",
          "operationParameter": {
            "in": "query",
            "name": "exclude_exchanges"
          },
          "required": false
        }
      ],
      "reservedParameters": [
        {
          "name": "_type",
          "fixed": "int256"
        },
        {
          "name": "_times",
          "fixed": "1000000000000000000"
        }
      ],
      "preProcessingSpecificationV2": {
        "environment": "Node",
        "value": "({ endpointParameters }) => {\n  const preProcessingObject = {\n    \"AAVE/USD\": {\n      path: \"trades.v2/spot_exchange_rate/aave/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"ADA/USD\": {\n      path: \"trades.v2/spot_exchange_rate/ada/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"ALGO/USD\": {\n      path: \"trades.v2/spot_exchange_rate/algo/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"ANKR/USD\": {\n      path: \"trades.v2/spot_exchange_rate/ankr/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"APE/USD\": {\n      path: \"trades.v2/spot_exchange_rate/ape/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"API3/USD\": {\n      path: \"trades.v2/spot_exchange_rate/api3/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"ARB/USD\": {\n      path: \"trades.v2/spot_exchange_rate/arb/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"ATOM/USD\": {\n      path: \"trades.v2/spot_exchange_rate/atom/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"AVAX/USD\": {\n      path: \"trades.v2/spot_exchange_rate/avax/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"AXS/USD\": {\n      path: \"trades.v2/spot_exchange_rate/axs/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"BAL/USD\": {\n      path: \"trades.v2/spot_exchange_rate/bal/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"BAT/USD\": {\n      path: \"trades.v2/spot_exchange_rate/bat/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"BNB/USD\": {\n      path: \"trades.v2/spot_exchange_rate/bnb/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"BTC/USD\": {\n      path: \"trades.v2/spot_exchange_rate/btc/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"CAKE/USD\": {\n      path: \"trades.v2/spot_exchange_rate/cake/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"CELO/USD\": {\n      path: \"trades.v2/spot_exchange_rate/celo/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"CHZ/USD\": {\n      path: \"trades.v2/spot_exchange_rate/chz/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"COMP/USD\": {\n      path: \"trades.v2/spot_exchange_rate/comp/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"CRO/USD\": {\n      path: \"trades.v2/spot_exchange_rate/cro/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"CRV/USD\": {\n      path: \"trades.v2/spot_exchange_rate/crv/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"CVX/USD\": {\n      path: \"trades.v2/spot_exchange_rate/cvx/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"DAI/USD\": {\n      path: \"trades.v2/spot_exchange_rate/dai/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"DOGE/USD\": {\n      path: \"trades.v2/spot_exchange_rate/doge/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"DOT/USD\": {\n      path: \"trades.v2/spot_exchange_rate/dot/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"ETH/USD\": {\n      path: \"trades.v2/spot_exchange_rate/eth/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"EUL/USD\": {\n      path: \"trades.v2/spot_exchange_rate/eul/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"FIL/USD\": {\n      path: \"trades.v2/spot_exchange_rate/fil/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"FLOW/USD\": {\n      path: \"trades.v2/spot_exchange_rate/flow/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"FXS/USD\": {\n      path: \"trades.v2/spot_exchange_rate/fxs/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"FTM/USD\": {\n      path: \"trades.v2/spot_exchange_rate/ftm/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"GLMR/USD\": {\n      path: \"trades.v2/spot_exchange_rate/glmr/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"GMX/USD\": {\n      path: \"trades.v2/spot_exchange_rate/gmx/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"GNO/USD\": {\n      path: \"trades.v2/spot_exchange_rate/gno/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"GRT/USD\": {\n      path: \"trades.v2/spot_exchange_rate/grt/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"HBAR/USD\": {\n      path: \"trades.v2/spot_exchange_rate/hbar/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"HNT/USD\": {\n      path: \"trades.v2/spot_exchange_rate/hnt/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"ICP/USD\": {\n      path: \"trades.v2/spot_exchange_rate/icp/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"IMX/USD\": {\n      path: \"trades.v2/spot_exchange_rate/imx/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"JOE/USD\": {\n      path: \"trades.v2/spot_exchange_rate/joe/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"KDA/USD\": {\n      path: \"trades.v2/spot_exchange_rate/kda/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"KSM/USD\": {\n      path: \"trades.v2/spot_exchange_rate/ksm/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"LDO/USD\": {\n      path: \"trades.v2/spot_exchange_rate/ldo/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"LINK/USD\": {\n      path: \"trades.v2/spot_exchange_rate/link/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"LQTY/USD\": {\n      path: \"trades.v2/spot_exchange_rate/lqty/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"LTC/USD\": {\n      path: \"trades.v2/spot_exchange_rate/ltc/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"MANA/USD\": {\n      path: \"trades.v2/spot_exchange_rate/mana/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"MKR/USD\": {\n      path: \"trades.v2/spot_exchange_rate/mkr/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"MATIC/USD\": {\n      path: \"trades.v2/spot_exchange_rate/matic/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"MOVR/USD\": {\n      path: \"trades.v2/spot_exchange_rate/movr/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"NEAR/USD\": {\n      path: \"trades.v2/spot_exchange_rate/near/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"OKB/USD\": {\n      path: \"trades.v2/spot_exchange_rate/okb/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"OP/USD\": {\n      path: \"trades.v2/spot_exchange_rate/op/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"PAXG/USD\": {\n      path: \"trades.v2/spot_exchange_rate/paxg/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"ROSE/USD\": {\n      path: \"trades.v2/spot_exchange_rate/rose/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"RPL/USD\": {\n      path: \"trades.v2/spot_exchange_rate/rpl/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"RSR/USD\": {\n      path: \"trades.v2/spot_exchange_rate/rsr/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"RUNE/USD\": {\n      path: \"trades.v2/spot_exchange_rate/rune/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"SAND/USD\": {\n      path: \"trades.v2/spot_exchange_rate/sand/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"SHIB/USD\": {\n      path: \"trades.v2/spot_exchange_rate/shib/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"SNX/USD\": {\n      path: \"trades.v2/spot_exchange_rate/snx/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"SOL/USD\": {\n      path: \"trades.v2/spot_exchange_rate/sol/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"stETH/USD\": {\n      path: \"trades.v2/spot_exchange_rate/steth/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"STG/USD\": {\n      path: \"trades.v2/spot_exchange_rate/stg/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"STX/USD\": {\n      path: \"trades.v2/spot_exchange_rate/stx/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"SUSHI/USD\": {\n      path: \"trades.v2/spot_exchange_rate/sushi/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"TUSD/USD\": {\n      path: \"trades.v2/spot_exchange_rate/tusd/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"UNI/USD\": {\n      path: \"trades.v2/spot_exchange_rate/uni/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"USDT/USD\": {\n      path: \"trades.v2/spot_exchange_rate/usdt/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"USDC/USD\": {\n      path: \"trades.v2/spot_exchange_rate/usdc/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"USDP/USD\": {\n      path: \"trades.v2/spot_exchange_rate/usdp/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"XLM/USD\": {\n      path: \"trades.v2/spot_exchange_rate/xlm/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"XRP/USD\": {\n      path: \"trades.v2/spot_exchange_rate/xrp/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"XTZ/USD\": {\n      path: \"trades.v2/spot_exchange_rate/xtz/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"YFI/USD\": {\n      path: \"trades.v2/spot_exchange_rate/yfi/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"ZIL/USD\": {\n      path: \"trades.v2/spot_exchange_rate/zil/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"ZRX/USD\": {\n      path: \"trades.v2/spot_exchange_rate/zrx/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"RNDR/USD\": {\n      path: \"trades.v2/spot_exchange_rate/rndr/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"MASK/USD\": {\n      path: \"trades.v2/spot_exchange_rate/mask/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"ENS/USD\": {\n      path: \"trades.v2/spot_exchange_rate/ens/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"BLUR/USD\": {\n      path: \"trades.v2/spot_exchange_rate/blur/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"BAND/USD\": {\n      path: \"trades.v2/spot_exchange_rate/band/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"UMA/USD\": {\n      path: \"trades.v2/spot_exchange_rate/uma/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"APT/USD\": {\n      path: \"trades.v2/spot_exchange_rate/apt/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"PEPE/USD\": {\n      path: \"trades.v2/spot_exchange_rate/pepe/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"OSMO/USD\": {\n      path: \"trades.v2/spot_exchange_rate/osmo/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"SUI/USD\": {\n      path: \"trades.v2/spot_exchange_rate/sui/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"GNS/USD\": {\n      path: \"trades.v2/spot_exchange_rate/gns/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"MNT/USD\": {\n      path: \"trades.v2/spot_exchange_rate/mnt/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"KAVA/USD\": {\n      path: \"trades.v2/spot_exchange_rate/kava/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"RIF/USD\": {\n      path: \"trades.v2/spot_exchange_rate/rif/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"RDNT/USD\": {\n      path: \"trades.v2/spot_exchange_rate/rdnt/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"WOO/USD\": {\n      path: \"trades.v2/spot_exchange_rate/woo/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"PYTH/USD\": {\n      path: \"trades.v2/spot_exchange_rate/pyth/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"ASTR/USD\": {\n      path: \"trades.v2/spot_exchange_rate/astr/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"DYM/USD\": {\n      path: \"trades.v2/spot_exchange_rate/dym/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"TIA/USD\": {\n      path: \"trades.v2/spot_exchange_rate/tia/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"USDe/USD\": {\n      path: \"trades.v2/spot_exchange_rate/usde/usd\",\n      parameters: { interval: \"1d\" },\n    },\n    \"SEI/USD\": {\n      path: \"trades.v2/spot_exchange_rate/sei/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"AR/USD\": {\n      path: \"trades.v2/spot_exchange_rate/ar/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"STRK/USD\": {\n      path: \"trades.v2/spot_exchange_rate/strk/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"AXL/USD\": {\n      path: \"trades.v2/spot_exchange_rate/axl/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"ONDO/USD\": {\n      path: \"trades.v2/spot_exchange_rate/ondo/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"MANTA/USD\": {\n      path: \"trades.v2/spot_exchange_rate/manta/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"RON/USD\": {\n      path: \"trades.v2/spot_exchange_rate/ron/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"XVS/USD\": {\n      path: \"trades.v2/spot_exchange_rate/xvs/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"PENDLE/USD\": {\n      path: \"trades.v2/spot_exchange_rate/pendle/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"TWT/USD\": {\n      path: \"trades.v2/spot_exchange_rate/twt/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"AERO/USD\": {\n      path: \"trades.v2/spot_exchange_rate/aero/usd\",\n      parameters: { interval: \"5m\" },\n    },\n    \"ERN/USD\": {\n      path: \"trades.v2/spot_exchange_rate/ern/usd\",\n      parameters: { interval: \"5m\" },\n    },\n    \"TAO/USD\": {\n      path: \"trades.v2/spot_exchange_rate/tao/usd\",\n      parameters: { interval: \"5m\" },\n    },\n    \"ORDI/USD\": {\n      path: \"trades.v2/spot_exchange_rate/ordi/usd\",\n      parameters: { interval: \"1m\" },\n    },\n    \"SATS/USD\": {\n      path: \"trades.v2/spot_exchange_rate/sats/usd\",\n      parameters: { interval: \"1m\" },\n    },\n  }\n  return {\n    endpointParameters: {\n      path: preProcessingObject[endpointParameters.name].path,\n      ...preProcessingObject[endpointParameters.name].parameters,\n    },\n  }\n}\n",
        "timeoutMs": 5000
      },
      "postProcessingSpecificationV2": {
        "environment": "Node",
        "value": "({ response, endpointParameters }) => {\n  const postProcessingObject = {\n    \"AAVE/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"ADA/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"ALGO/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"ANKR/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"APE/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"API3/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"ARB/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"ATOM/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"AVAX/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"AXS/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"BAL/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"BAT/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"BNB/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"BTC/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"CAKE/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"CELO/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"CHZ/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"COMP/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"CRO/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"CRV/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"CVX/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"DAI/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"DOGE/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"DOT/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"ETH/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"EUL/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"FIL/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"FLOW/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"FXS/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"FTM/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"GLMR/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"GMX/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"GNO/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"GRT/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"HBAR/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"HNT/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"ICP/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"IMX/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"JOE/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"KDA/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"KSM/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"LDO/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"LINK/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"LQTY/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"LTC/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"MANA/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"MKR/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"MATIC/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"MOVR/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"NEAR/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"OKB/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"OP/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"PAXG/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"ROSE/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"RPL/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"RSR/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"RUNE/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"SAND/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"SHIB/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"SNX/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"SOL/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"stETH/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"STG/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"STX/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"SUSHI/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"TUSD/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"UNI/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"USDT/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"USDC/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"USDP/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"XLM/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"XRP/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"XTZ/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"YFI/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"ZIL/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"ZRX/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"RNDR/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"MASK/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"ENS/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"BLUR/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"BAND/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"UMA/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"APT/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"PEPE/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"OSMO/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"SUI/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"GNS/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"MNT/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"KAVA/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"RIF/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"RDNT/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"WOO/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"PYTH/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"ASTR/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"DYM/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"TIA/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"USDe/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"SEI/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"AR/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"STRK/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"AXL/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"ONDO/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"MANTA/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"RON/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"XVS/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"PENDLE/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"TWT/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"AERO/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"ERN/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"TAO/USD\":\n      \"(response) => {\\n            const validDataArray = response.data.filter((obj => obj.price !== null ));\\n            if(validDataArray.length === 0) {\\n              throw Error('[Known Error] - Kaiko returns null as price for the feed.');\\n            }\\n            return validDataArray[0].price;\\n          }\\n          \",\n    \"ORDI/USD\":\n      \"(response) => {\\n          const validDataArray = response.data.filter((obj) => obj.price !== null)\\n          if (validDataArray.length === 0) {\\n            throw Error('[Known Error] - Kaiko returns null as price for the feed.')\\n          }\\n          return validDataArray[0].price\\n        }\\n        \",\n    \"SATS/USD\":\n      \"(response) => {\\n          const validDataArray = response.data.filter((obj) => obj.price !== null)\\n          if (validDataArray.length === 0) {\\n            throw Error('[Known Error] - Kaiko returns null as price for the feed.')\\n          }\\n          return validDataArray[0].price\\n        }\\n        \",\n  }\n  const parser = eval(postProcessingObject[endpointParameters.name])\n  return { response: parser(response) }\n}\n",
        "timeoutMs": 5000
      }
    }
  ]
}
